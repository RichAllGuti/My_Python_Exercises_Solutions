"""
Provided a string, find out if its characters can be rearranged to form a palindrome.

The function must return a Boolean result.
"""
def can_be_rearranged(characters_string):
    
    # Dictionary to store the drequency of eachcharacter in the input string.
    char_definition = {}

    # Iterate over the characters in the character_string to update the drequency count in the char_definition dictionary using the get method.
    for char in characters_string:
        char_definition[char] = char_definition.get(char, 0) + 1
    
    """
     Iterating over the frequency counts in the char_definition dictionary using a list comprehension and the modulo operator. 
     This is done by counting the number of True values generated by the condition freq % 2 == 1.
    """
    num_odd_chars = sum(freq % 2 == 1 for freq in char_definition.values())
    
    # Obtaining the boolean value.
    result = num_odd_chars <= 1
    
    return result

inputString = "jeje"
inputString = "jejeje"
print(can_be_rearranged(inputString))
